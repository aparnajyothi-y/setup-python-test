name: Test Python Location 

on:
  workflow_dispatch:

jobs:
  positivetestcases:
    runs-on: ${{ matrix.runners }}
    strategy:
      fail-fast: false
      matrix:
          runners: ['ubuntu-latest','windows-latest','macos-13','macos-latest']
          python-version: [ '3.11', 'pypy3.10','pypy3.11', 'graalpy-24', '3.13t' ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up ${{ matrix.python-version }}
        uses: aparnajyothi-y/setup-python@fix-windows-graalpy
        with:
          python-version: ${{ matrix.python-version }}
      - name: Check pythonLocation variable (Linux & macOS)
        if: runner.os != 'Windows'
        shell: bash
        env:
          pythonLocation: ${{ env.pythonLocation }}
        run: |
          echo "pythonLocation: $pythonLocation"
          if [[ -z "$pythonLocation" ]]; then
            echo "::error ::pythonLocation is not set"
            exit 1
          fi
          "$pythonLocation/bin/python" --version
      - name: Check pythonLocation variable (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        env:
          pythonLocation: ${{ env.pythonLocation }}
        run: |
          Write-Host "pythonLocation: $env:pythonLocation"
          if (-not $env:pythonLocation) {
              Write-Error "::error ::pythonLocation is not set"
              exit 1
          }
          & "$env:pythonLocation\python.exe" --version
      - name: Check Python executable layout
        shell: bash
        run: |
          echo "pythonLocation: $pythonLocation"
          if [[ "${{ matrix.python-version }}" == "pypy3.10" || "${{ matrix.python-version }}" == "graalpy-24" || "${{ matrix.python-version }}" == "pypy3.11" ]]; then
            # PyPy and GraalPy should NOT have python executable at the root
            echo "pypy/graalpy"
                  
            if [[ "$RUNNER_OS" == "Windows" ]]; then
              echo "pythonLocation/python: $pythonLocation/python.exe"
              ls -al "$pythonLocation"
              if [ -f "$pythonLocation/python.exe" ]; then
                echo "::error ::PyPy/GraalPy should NOT have python.exe at root of pythonLocation"
                exit 1
              fi
            else
              echo "pythonLocation/bin/python: $pythonLocation/bin/python"
              echo "pythonLocation/python: $pythonLocation/python"
              ls -al "$pythonLocation"
              ls -al "$pythonLocation/bin"
              if [ -f "$pythonLocation/bin/python" ] || [ -f "$pythonLocation/python" ]; then
                echo "::error ::PyPy/GraalPy should NOT have python or python binary at root/bin of pythonLocation"
                exit 1
              fi
              # Try to run version, should fail or not exist
              if [ -f "$pythonLocation/python" ]; then
                "$pythonLocation/python" -V
              fi
            fi
          else
            # On Windows, the executable will be python.exe
            if [[ "$RUNNER_OS" == "Windows" ]]; then
              echo "pythonLocation/python: $pythonLocation/python.exe"
              ls -al "$pythonLocation"
              if [ ! -f "$pythonLocation/python.exe" ]; then
                echo "::error ::CPython should have python.exe at root of pythonLocation"
                exit 1
              fi
            else
              echo "pythonLocation/bin/python: $pythonLocation/bin/python"
              echo "pythonLocation/python: $pythonLocation/python"
              ls -al "$pythonLocation"
              if [ ! -f "$pythonLocation/bin/python" ] && [ ! -f "$pythonLocation/python" ]; then
                echo "::error ::CPython should have python or python binary at root/bin of pythonLocation"
                exit 1
              fi
              # Try to run version, should fail or not exist
              if [ -f "$pythonLocation/python" ]; then
                "$pythonLocation/python" -V
              fi
            fi           
          fi
